stages:
  - test
  - build
  - deploy

blockchain-test:
  image: docker:latest
  services:
    - docker:dind
  stage: test
  only:
    - dev
    - main
    - feature/#64
  script:
    - docker build -f docker/blockchain/BlockchainTestDockerfile --build-arg BLOCKCHAIN_LIB_REGISTRY_DOMAIN=$BLOCKCHAIN_LIB_REGISTRY_DOMAIN --build-arg BLOCKCHAIN_LIB_REGISTRY_READ_TOKEN=$BLOCKCHAIN_LIB_REGISTRY_READ_TOKEN -t bc-tests ./blockchain
    - docker run bc-tests 2>&1

blockchain-node:
  variables:
    SUPPLIER_ADMIN: "The address of a company supplier"
    CUSTOMER_ADMIN: "The address of a company customer"
  image: docker:latest
  services:
    - docker:dind
  stage: build
  only:
    - dev
    - main
    - feature/#64
  script:
    - docker build -f docker/blockchain/BlockchainDockerfile --build-arg BLOCKCHAIN_LIB_REGISTRY_DOMAIN=$BLOCKCHAIN_LIB_REGISTRY_DOMAIN --build-arg BLOCKCHAIN_LIB_REGISTRY_READ_TOKEN=$BLOCKCHAIN_LIB_REGISTRY_READ_TOKEN -t bc-node ./blockchain
    - docker run -e SUPPLIER_ADMIN=$SUPPLIER_ADMIN -e CUSTOMER_ADMIN=$CUSTOMER_ADMIN bc-node 2>&1

blockchain-contract-deployer:
  variables:
    SUPPLIER_ADMIN: "The address of a company supplier"
    CUSTOMER_ADMIN: "The address of a company customer"
  image: docker:latest
  services:
    - docker:dind
  stage: deploy
  only:
    - dev
    - main
    - feature/#64
  script:
    - docker build -f docker/blockchain/BlockchainDockerfile --build-arg BLOCKCHAIN_LIB_REGISTRY_DOMAIN=$BLOCKCHAIN_LIB_REGISTRY_DOMAIN --build-arg BLOCKCHAIN_LIB_REGISTRY_READ_TOKEN=$BLOCKCHAIN_LIB_REGISTRY_READ_TOKEN -t bc-contract-deployer ./blockchain
    - docker run -e SUPPLIER_ADMIN=$SUPPLIER_ADMIN -e CUSTOMER_ADMIN=$CUSTOMER_ADMIN -e RPC_URL=http://blockchain_node:8545/ -e PRIVATE_KEY=ac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80 --entrypoint npx hardhat run scripts/deploy.ts --network testnet bc-contract-deployer 2>&1


blockchain-lib-test:
  image: docker:latest
  services:
    - docker:dind
  stage: test
  only:
    - dev
    - main
    - feature/#64
  script:
    - docker build -f docker/package/BlockchainLibTestDockerfile --build-arg BLOCKCHAIN_LIB_REGISTRY_DOMAIN=$BLOCKCHAIN_LIB_REGISTRY_DOMAIN --build-arg BLOCKCHAIN_LIB_REGISTRY_READ_TOKEN=$BLOCKCHAIN_LIB_REGISTRY_READ_TOKEN -t bc-lib-tests ./blockchain
    - docker run bc-lib-tests 2>&1

blockchain-lib-build:
  image: docker:latest
  services:
    - docker:dind
  stage: build
  only:
    - dev
    - main
    - feature/#64
  script:
    - docker build -f docker/package/BlockchainLibDockerfile --build-arg BLOCKCHAIN_LIB_REGISTRY_DOMAIN=$BLOCKCHAIN_LIB_REGISTRY_DOMAIN --build-arg BLOCKCHAIN_LIB_REGISTRY_READ_TOKEN=$BLOCKCHAIN_LIB_REGISTRY_READ_TOKEN -t bc-lib ./
  artifacts:
    paths:
      - dist/

blockchain-lib-publish:
  image: node:20-alpine3.17
  stage: deploy
  only:
    - dev
    - main
    - feature/#64
  dependencies:
    - blockchain-lib-build
  script:
    - npm config set @coffe-trading-lib:registry https://$COFFEE_TRADING_LIB_REGISTRY_DOMAIN
    - npm config set -- "//$COFFEE_TRADING_LIB_REGISTRY_DOMAIN:_authToken" "$COFFEE_TRADING_LIB_REGISTRY_WRITE_TOKEN"
    - npm publish
