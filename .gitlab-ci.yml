stages:
  - test
  - build
  - deploy

blockchain-test:
  image: docker:latest
  services:
    - docker:dind
  stage: test
  only:
    - dev
    - main
    - feature/#64
  script:
    - docker build -f docker/blockchain/BlockchainTestDockerfile --build-arg BLOCKCHAIN_LIB_REGISTRY_DOMAIN=$BLOCKCHAIN_LIB_REGISTRY_DOMAIN --build-arg BLOCKCHAIN_LIB_REGISTRY_READ_TOKEN=$BLOCKCHAIN_LIB_REGISTRY_READ_TOKEN -t bc-tests ./blockchain
    - docker run bc-tests 2>&1

blockchain-node:
  image: docker:latest
  services:
    - docker:dind
  stage: build
  only:
    - dev
    - main
    - feature/#64
  script:
    - docker build -f docker/blockchain/BlockchainDockerfile --build-arg BLOCKCHAIN_LIB_REGISTRY_DOMAIN=$BLOCKCHAIN_LIB_REGISTRY_DOMAIN --build-arg BLOCKCHAIN_LIB_REGISTRY_READ_TOKEN=$BLOCKCHAIN_LIB_REGISTRY_READ_TOKEN -t gitlab-core.supsi.ch:5050/dti-isin/giuliano.gremlich/blockchain/one-lib-to-rule-them-all/coffe-trading-management/blockchain-node ./blockchain
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker push gitlab-core.supsi.ch:5050/dti-isin/giuliano.gremlich/blockchain/one-lib-to-rule-them-all/coffe-trading-management/blockchain-node

blockchain-node-deploy:
  stage: deploy
  only:
    - dev
    - main
    - feature/#64
  script:
    - cp $GCLOUD_SA_AUTH_KEY gcloud_auth.json
    - cp $COMPOSE_ENV_FILE .env.compose
    - docker build -f docker/GCloudDockerfile -t gcloud-deployer .
    - docker run -e GCLOUD_PULL_PASSWORD=$REGISTRY_PULL_PASSWORD -e GCLOUD_PULL_USERNAME=$REGISTRY_PULL_USERNAME gcloud-deployer 2>&1



blockchain-lib-test:
  image: docker:latest
  services:
    - docker:dind
  stage: test
  only:
    - dev
    - main
    - feature/#64
  script:
    - docker build -f docker/package/BlockchainLibTestDockerfile --build-arg BLOCKCHAIN_LIB_REGISTRY_DOMAIN=$BLOCKCHAIN_LIB_REGISTRY_DOMAIN --build-arg BLOCKCHAIN_LIB_REGISTRY_READ_TOKEN=$BLOCKCHAIN_LIB_REGISTRY_READ_TOKEN -t bc-lib-tests ./
    - docker run bc-lib-tests 2>&1

blockchain-lib-build:
  image: docker:latest
  services:
    - docker:dind
  stage: build
  only:
    - dev
    - main
    - feature/#64
  script:
    - docker build -f docker/package/BlockchainLibDockerfile --build-arg BLOCKCHAIN_LIB_REGISTRY_DOMAIN=$BLOCKCHAIN_LIB_REGISTRY_DOMAIN --build-arg BLOCKCHAIN_LIB_REGISTRY_READ_TOKEN=$BLOCKCHAIN_LIB_REGISTRY_READ_TOKEN -t bc-lib ./
  artifacts:
    paths:
      - dist/

blockchain-lib-publish:
  image: node:20-alpine3.17
  stage: deploy
  only:
    - dev
    - main
    - feature/#64
  dependencies:
    - blockchain-lib-build
  script:
    - npm config set @coffe-trading-lib:registry https://$COFFEE_TRADING_LIB_REGISTRY_DOMAIN
    - npm config set -- "//$COFFEE_TRADING_LIB_REGISTRY_DOMAIN:_authToken" "$COFFEE_TRADING_LIB_REGISTRY_WRITE_TOKEN"
    - npm publish
